//! The starry themes collection in this module was extracted from <https://github.com/ray-x/starrt> using `auto_extract.py`

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn starry() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(1, 39, 49)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(41, 161, 148), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(255, 149, 182), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(249, 123, 88), false, false, false, false)),
        ("title".to_owned(), Style::new(Color::new(171, 188, 187), false, false, false, true)),
        ("strike".to_owned(), Style::new(Color::new(0, 99, 147), false, true, false, false)),
        ("underline".to_owned(), Style::new(Color::new(171, 188, 187), false, false, false, false)),
        ("emphasis".to_owned(), Style::new(Color::new(58, 150, 218), false, false, false, true)),
        ("text.reference".to_owned(), Style::new(Color::new(41, 161, 148), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(171, 188, 187), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(16, 174, 248), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(152, 238, 100), false, false, false, false)),
        ("type.deinition".to_owned(), Style::new(Color::new(249, 123, 88), false, false, false, false)),
        ("type.qualifier".to_owned(), Style::new(Color::new(183, 126, 55), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(174, 129, 239), false, false, false, true)),
        ("type".to_owned(), Style::new(Color::new(183, 126, 55), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(84, 174, 166), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(255, 149, 182), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(7, 64, 81), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(241, 155, 182), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(86, 174, 156), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(64, 149, 186), false, false, false, true)),
        ("function.call".to_owned(), Style::new(Color::new(64, 149, 186), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(58, 150, 218), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(217, 158, 88), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(58, 150, 218), false, false, false, true)),
        ("parameter".to_owned(), Style::new(Color::new(255, 149, 182), false, false, false, true)),
        ("keyword.operator".to_owned(), Style::new(Color::new(86, 174, 156), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(86, 174, 156), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(251, 236, 159), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(15, 193, 146), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(47, 133, 218), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(77, 179, 128), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(208, 31, 38), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(41, 161, 148), false, false, false, true)),
        ("constant".to_owned(), Style::new(Color::new(41, 161, 148), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(102, 201, 207), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(192, 100, 49), false, false, true, false)),
        ("attribute".to_owned(), Style::new(Color::new(191, 138, 4), false, false, false, false)),
        ("annotation".to_owned(), Style::new(Color::new(208, 31, 38), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(148, 164, 190), false, false, false, false)),
        ("text.danger".to_owned(), Style::new(Color::new(255, 0, 0), false, false, false, false)),
        ("text.warning".to_owned(), Style::new(Color::new(191, 138, 4), false, false, false, false)),
        ("text.note".to_owned(), Style::new(Color::new(149, 129, 128), false, false, false, false)),
        ("text.todo.checked".to_owned(), Style::new(Color::new(149, 129, 128), false, false, false, false)),
        ("text.todo.unchecked".to_owned(), Style::new(Color::new(191, 138, 4), false, false, true, true)),
        ("text.todo".to_owned(), Style::new(Color::new(191, 138, 4), false, false, true, true)),
        ("exception".to_owned(), Style::new(Color::new(158, 113, 207), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(183, 126, 55), false, false, false, false)),
        ("text.environment".to_owned(), Style::new(Color::new(41, 161, 148), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(208, 31, 38), false, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(64, 123, 244), false, false, false, false)),
        ("text.literal.markdown_inline".to_owned(), Style::new(Color::new(208, 31, 38), false, false, false, false)),
        ("text.literal.markdown".to_owned(), Style::new(Color::new(171, 188, 187), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(86, 174, 156), false, false, false, false)),
        ("text.title".to_owned(), Style::new(Color::new(171, 188, 187), false, false, false, true)),
        ("variable.builtin".to_owned(), Style::new(Color::new(148, 164, 190), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(84, 174, 166), false, false, false, true)),
        ("method.call".to_owned(), Style::new(Color::new(84, 174, 166), false, false, false, true)),
        ("function".to_owned(), Style::new(Color::new(64, 149, 186), false, false, false, true)),
        ("keyword".to_owned(), Style::new(Color::new(86, 174, 156), false, false, false, true)),
        ("keyword.function".to_owned(), Style::new(Color::new(134, 170, 172), false, false, false, true)),
        ("keyword.return".to_owned(), Style::new(Color::new(86, 174, 156), false, false, false, true)),
        ("repeat".to_owned(), Style::new(Color::new(209, 132, 199), false, false, false, true)),
        ("conditional".to_owned(), Style::new(Color::new(209, 132, 199), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(149, 129, 128), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(149, 129, 128), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(148, 164, 190), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(209, 61, 143), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(205, 139, 89), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(64, 149, 186), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(209, 61, 143), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(58, 150, 218), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(58, 150, 218), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(255, 149, 182), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(16, 174, 248), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(41, 161, 148), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(41, 161, 148), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(208, 31, 38), false, false, false, false)),
    ]))
}
